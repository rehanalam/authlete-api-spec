{
  "openapi": "3.0.3",
  "info": {
    "title": "Authlete Minimal API",
    "description": "Minimal OpenAPI spec sample with 4 endpoints from Authlete.",
    "version": "1.0.0",
    "contact": {
      "name": "Authlete Support",
      "email": "support@authlete.com",
      "url": "https://authlete.com/contact"
    }
  },
  "servers": [
    {
      "url": "https://api.authlete.com",
      "description": "Authlete main server"
    }
  ],
  "paths": {
    "/api/{serviceId}/client/get/{clientId}": {
      "get": {
        "summary": "Retrieve client information by clientId",
        "operationId": "getClient",
        "parameters": [
          {
            "name": "serviceId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Service identifier"
          },
          {
            "name": "clientId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Client identifier"
          }
        ],
        "responses": {
          "200": {
            "description": "Client information retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Client"
                }
              }
            }
          },
          "404": {
            "description": "Client not found"
          }
        }
      }
    },
    "/api/{serviceId}/client/create": {
      "post": {
        "summary": "Create a new client",
        "operationId": "createClient",
        "parameters": [
          {
            "name": "serviceId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Service identifier"
          }
        ],
        "requestBody": {
          "description": "New client data",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewClient"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Client created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Client"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request data"
          }
        }
      }
    },
    "/api/{serviceId}/client/authorization/update/{clientId}": {
      "post": {
        "summary": "Update authorization of a client",
        "operationId": "updateClientAuthorization",
        "parameters": [
          {
            "name": "serviceId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Service identifier"
          },
          {
            "name": "clientId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Client identifier"
          }
        ],
        "requestBody": {
          "description": "Authorization update data",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ClientAuthorizationUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Authorization updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "resultCode": {
                      "type": "integer",
                      "example": 0
                    },
                    "resultMessage": {
                      "type": "string",
                      "example": "Success"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid update data"
          }
        }
      }
    },
    "/api/{serviceId}/auth/authorization/ticket/info": {
      "get": {
        "summary": "Get authorization ticket information",
        "operationId": "getAuthorizationTicketInfo",
        "parameters": [
          {
            "name": "serviceId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Service identifier"
          },
          {
            "name": "ticket",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Authorization ticket value"
          }
        ],
        "responses": {
          "200": {
            "description": "Authorization ticket information retrieved",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthTicketInfo"
                }
              }
            }
          },
          "404": {
            "description": "Ticket not found or expired"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Client": {
        "type": "object",
        "required": ["clientId", "clientName"],
        "properties": {
          "clientId": {
            "type": "string",
            "description": "Client identifier"
          },
          "clientName": {
            "type": "string",
            "description": "Client display name"
          },
          "clientSecret": {
            "type": "string",
            "description": "Client secret"
          }
        }
      },
      "NewClient": {
        "type": "object",
        "required": ["clientName"],
        "properties": {
          "clientName": {
            "type": "string",
            "description": "Client display name"
          },
          "redirectUris": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            },
            "description": "List of redirect URIs"
          }
        }
      },
      "ClientAuthorizationUpdate": {
        "type": "object",
        "required": ["subject", "scopes"],
        "properties": {
          "subject": {
            "type": "string",
            "description": "User subject identifier"
          },
          "scopes": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of scopes to authorize"
          }
        }
      },
      "AuthTicketInfo": {
        "type": "object",
        "required": ["ticket", "clientId", "subject"],
        "properties": {
          "ticket": {
            "type": "string",
            "description": "Authorization ticket value"
          },
          "clientId": {
            "type": "string",
            "description": "Client identifier associated with the ticket"
          },
          "subject": {
            "type": "string",
            "description": "User subject identifier"
          },
          "scopes": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Authorized scopes"
          }
        }
      }
    }
  }
}
